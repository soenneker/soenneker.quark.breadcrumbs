@using Soenneker.Quark.ListItems
@using Soenneker.Quark.Anchors
@using Soenneker.Quark.Components.Builders
@using Soenneker.Quark.Components.Builders.Colors

@inherits Soenneker.Quark.Components.Element

@if (!string.IsNullOrEmpty(To))
{
    <ListItem Class="breadcrumb-item">
        <Anchor To="@To" @attributes="BuildAttributes()">
            @ChildContent
        </Anchor>
    </ListItem>
}
else
{
    <ListItem @attributes="BuildAttributes()">
        @ChildContent
    </ListItem>
}

@code {
    [Parameter]
    public string? To { get; set; }

    [Parameter]
    public bool Active { get; set; }

    [Parameter]
    public CssValue<ColorBuilder> Color { get; set; } = Components.Builders.Colors.Color.Primary;

    protected override Dictionary<string, object> BuildAttributes()
    {
        Dictionary<string, object> attributes = base.BuildAttributes();

        var baseClasses = "breadcrumb-item";

        if (Active)
        {
            baseClasses = $"{baseClasses} active";
            attributes["aria-current"] = "page";
        }

        AppendToClassAttr(attributes, baseClasses);

        return attributes;
    }
}
